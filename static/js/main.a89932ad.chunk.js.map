{"version":3,"sources":["components/Loader.js","components/Error-msg.js","components/RickAndMortySearch.js","helpers/fetchRequest.js","components/RickAndMortyModal.js","components/RickAndMortyCard.js","components/RickAndMortyResults.js","components/RickAndMortyApp.js","components/RickAndMortyNavMenu.js","assets/rickandmortylogo.png","components/RickAndMortyHeader.js","components/ConfirmSign.js","components/RickAndMortyFavs.js","assets/favicon-animado.ico","components/RickAndMortyAbout.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","width","height","viewBox","xmlns","stroke","fill","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","d","attributeName","type","from","to","dur","repeatCount","ErrorMsg","status","className","onClick","window","location","reload","RickAndMortySearch","setSearch","useState","name","setName","id","placeholder","onChange","e","target","value","preventDefault","fetchRequest","url","options","setLoader","setError","setData","a","fetch","res","json","ok","statusText","message","RickAndMortyModal","data","setModal","img","image","origin","species","ReactDOM","createPortal","src","alt","document","getElementById","favList","RickAndMortyCard","modal","sign","setSign","pathname","useLocation","includes","setTimeout","favName","push","localStorage","setItem","JSON","stringify","RickAndMortyResults","initialData","setInfo","page","setPage","history","useHistory","results","map","el","info","prev","next","RickAndMortyApp","search","loader","error","useEffect","method","scroll","RickAndMortyNavMenu","exact","activeClassName","RickAndMortyHeader","logo","ConfirmSign","setConfirm","clear","RickAndMortyFavs","confirm","length","favs","parse","getItem","RickAndMortyAbout","myLogo","href","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"6ZAEe,SAASA,IACpB,OACI,qBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,6BAA6BC,OAAO,UAA1F,SACI,mBAAGC,KAAK,OAAOC,SAAS,UAAxB,SACI,oBAAGC,UAAU,iBAAiBC,YAAY,IAA1C,UACI,wBAAQC,cAAc,KAAKC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC7C,sBAAMC,EAAE,8BAAR,SACA,kCACIC,cAAc,YACdC,KAAK,SACLC,KAAK,UACLC,GAAG,YACHC,IAAI,KACJC,YAAY,wB,MCZrB,SAASC,EAAT,GAA4B,IAATC,EAAQ,EAARA,OAC9B,OACI,sBAAKC,UAAU,kBAAf,UACI,4BAAID,IACJ,wBAAQE,QAAS,WAAKC,OAAOC,SAASC,UAAtC,uB,MCJG,SAASC,EAAT,GAAyC,IAAZC,EAAW,EAAXA,UACxC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KASA,OACI,uBAAMT,UAAU,cAAhB,UACI,uBAAOP,KAAK,SAASO,UAAU,eAAeU,GAAG,SAASC,YAAY,SAASC,SAJpE,SAACC,GAAD,OAAMJ,EAAQI,EAAEC,OAAOC,QAIqEA,MAAOP,IAC9G,wBAAQf,KAAK,SAASO,UAAU,aAAaC,QAVlC,SAACY,GAChBA,EAAEG,iBACFV,EAAUE,IAQN,SACI,mBAAGR,UAAU,uB,6BCjBd,SAAeiB,EAA9B,0C,4CAAe,WAA4BC,EAAIC,EAAQC,EAAUC,EAASC,GAA3D,qBAAAC,EAAA,6DACXH,GAAU,GADC,kBAGSI,MAAMN,EAAIC,GAHnB,cAGHM,EAHG,gBAIUA,EAAIC,OAJd,UAIHA,EAJG,OAMFD,EAAIE,GANF,sBAOS,CAAC,OAAUF,EAAI1B,OAAQ,WAAc0B,EAAIG,YAPlD,QAUPN,EAAQI,GAVD,kDAaHG,EAAU,KAAID,YAAc,yCAC5B7B,EAAS,KAAIA,QAAU,KAC3BsB,EAAS,SAAD,OAAUtB,EAAV,aAAqB8B,IAftB,QAiBXT,GAAU,GAjBC,2D,6CCIA,SAASU,EAAT,GAA4C,IAAhBC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,SACxCxB,EAAOuB,EAAKA,KAAKvB,KACjByB,EAAMF,EAAKA,KAAKG,MAChBC,EAASJ,EAAKA,KAAKI,OAAO3B,KAC1B4B,EAAUL,EAAKA,KAAKK,QACpB3C,EAAOsC,EAAKA,KAAKtC,KACjBU,EAAW4B,EAAKA,KAAK5B,SAASK,KAIlC,OAAO6B,IAASC,aACZ,qBAAKtC,UAAU,kBAAf,SACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,YAAYC,QALxB,kBAAK+B,GAAS,IAKpB,eACA,qBAAKO,IAAKN,EAAKO,IAAKhC,EAAMR,UAAU,aACpC,oBAAIA,UAAU,OAAd,SAAsBQ,IACtB,oBAAGR,UAAU,OAAb,qBAA6BmC,KAC7B,oBAAGnC,UAAU,OAAb,sBAA8BoC,KAC9B,oBAAGpC,UAAU,OAAb,mBAA2BP,KAC3B,oBAAGO,UAAU,OAAb,2BAAgCG,UAGxCsC,SAASC,eAAe,UCrBhC,IAAIC,EAAU,CAAC,KAEA,SAASC,EAAiBb,GACrC,MAAyBxB,oBAAS,GAAlC,mBAAOsC,EAAP,KAAab,EAAb,KACA,EAAuBzB,oBAAS,GAAhC,mBAAOuC,EAAP,KAAYC,EAAZ,KACKC,EAAYC,cAAZD,SAEDf,EAAMF,EAAKA,KAAKG,MAChB1B,EAAOuB,EAAKA,KAAKvB,KACjBE,EAAKqB,EAAKA,KAAKrB,GAYnB,OACI,sBAAKV,UAAU,OAAf,UACK8C,GAAQ,oBAAI9C,UAAU,WAAd,SAA0B,yBACjCgD,EAASE,SAAS,eAAkB,mBAAGlD,UAAU,eAAeC,QAX1D,SAACY,GACbkC,GAAQ,GACRI,YAAW,kBAAMJ,GAAQ,KAAO,KAChC,IAAIK,EAAUvC,EAAEC,OAAOJ,GACvBiC,EAAQU,KAAKD,GACbE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUd,KAM0CjC,GAAIA,IAC1F,qBAAK6B,IAAKN,EAAKO,IAAKhC,EAAMR,UAAU,aACpC,oBAAIA,UAAU,YAAd,SAA2BQ,IAC3B,wBAAQP,QAhBE,kBAAK+B,GAAS,IAgBMhC,UAAU,WAAxC,eACC6C,GAAS,cAAC,EAAD,CAAmBd,KAAMA,EAAMC,SAAUA,O,MC7BhD,SAAS0B,EAAT,GAAsE,IAAxC3B,EAAuC,EAAvCA,KAAK4B,EAAkC,EAAlCA,YAAYC,EAAsB,EAAtBA,QAAQC,EAAc,EAAdA,KAAKC,EAAS,EAATA,QACnEC,EAAUC,cAcd,OACI,oCACI,qBAAKhE,UAAU,mBAAf,SACM+B,IAAS4B,GAAgB5B,EAAKkC,QAAQC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAA8BpC,KAAMoC,GAAbA,EAAGzD,SAEjF,sBAAKV,UAAU,2BAAf,UACM+B,EAAKqC,KAAKC,MAAS,wBAAQpE,QAlBxB,WACb6D,EAAQD,EAAO,GACfE,EAAQV,KAAR,gBAAsBQ,EAAO,IAC7BD,EAAQ7B,EAAKqC,KAAKC,OAeW,sBAClBtC,EAAKqC,KAAKE,MAAiB,IAATT,EAAqB,gDAAcA,KAAtB,6BAChC9B,EAAKqC,KAAKE,MAAQ,wBAAQrE,QAdvB,WACb6D,EAAQD,EAAO,GACfE,EAAQV,KAAR,gBAAsBQ,EAAO,IAC7BD,EAAQ7B,EAAKqC,KAAKE,OAWU,8BClBpC,IAAIX,EAAc,GAKH,SAASY,IACpB,MAAuBhE,mBAASoD,GAAhC,mBAAO5B,EAAP,KAAYT,EAAZ,KACA,EAAuBf,mBAAS,IAAhC,mBAAO6D,EAAP,KAAYR,EAAZ,KACA,EAAuBrD,mBAAS,GAAhC,mBAAOsD,EAAP,KAAYC,EAAZ,KACA,EAA2BvD,mBAPX,IAOhB,mBAAOiE,EAAP,KAAclE,EAAd,KACA,EAA2BC,oBAAS,GAApC,mBAAOkE,EAAP,KAAcrD,EAAd,KACA,EAAyBb,mBAAS,MAAlC,mBAAOmE,EAAP,KAAarD,EAAb,KAyBA,OAvBAsD,qBAAU,WAGN1D,EAFU,4CAEO,CAAC2D,OAAQ,OAAOxD,EAAUC,EAASC,KACtD,IAEFqD,qBAAU,WAjBM,KAkBRH,IAEAvD,EADO,0DAAsDuD,GAC5C,CAACI,OAAQ,OAAOxD,EAAUC,EAASC,GACpDhB,EArBQ,IAsBRwD,EAAQ,MAEd,CAACU,IAEHG,qBAAU,WACO,KAATP,IAEAnD,EADUmD,EACO,CAACQ,OAAQ,OAAOxD,EAAUC,EAASC,GACpDpB,OAAO2E,OAAO,EAAE,MAEtB,CAACT,IAGC,sBAAKpE,UAAU,gBAAf,WACO0E,GAAU,cAAC,EAAD,CAAoBpE,UAAWA,IAC1CmE,GAAW,cAAChG,EAAD,IACD,OAAViG,GAAmB,cAAC5E,EAAD,CAAUC,OAAQ2E,IACrC3C,IAAS4B,GAAgB,oBAAI3D,UAAU,YAAd,mCACzB+B,IAAS4B,GAAgB,cAAC,EAAD,CAAqB5B,KAAMA,EAAM4B,YAAaA,EAAaC,QAASA,EAASC,KAAMA,EAAMC,QAASA,O,iBChD1H,SAASgB,IACpB,OACI,sBAAK9E,UAAU,WAAf,UACI,cAAC,IAAD,CAAS+E,OAAK,EAACpF,GAAG,IAAIK,UAAU,gBAAgBgF,gBAAgB,SAAhE,kBACA,cAAC,IAAD,CAASD,OAAK,EAACpF,GAAG,aAAaK,UAAU,gBAAgBgF,gBAAgB,SAAzE,uBACA,cAAC,IAAD,CAASD,OAAK,EAACpF,GAAG,SAASK,UAAU,gBAAgBgF,gBAAgB,SAArE,4BCRG,UAA0B,6C,MCG1B,SAASC,IACpB,OACI,yBAAQjF,UAAU,SAAlB,UACI,qBAAKuC,IAAK2C,EAAM1C,IAAI,OAAOxC,UAAU,gBACrC,oBAAIA,UAAU,eAAd,yD,MCJG,SAASmF,EAAT,GAAuD,IAAjCC,EAAgC,EAAhCA,WAAW9D,EAAqB,EAArBA,QAAQqC,EAAa,EAAbA,YAUpD,OACI,sBAAK3D,UAAU,eAAf,UACI,yFACA,wBAAQC,QATI,WAChBqD,aAAa+B,QACb/D,EAAQqC,GACRzD,OAAOC,SAASC,UAMoBJ,UAAU,cAA1C,gBACA,wBAAQC,QAZG,kBAAKmF,GAAW,IAYIpF,UAAU,aAAzC,yBCTZ,IAAI2D,EAAc,GAEH,SAAS2B,IACpB,MAAuB/E,mBAASoD,GAAhC,mBAAO5B,EAAP,KAAYT,EAAZ,KACA,EAA2Bf,oBAAS,GAApC,mBAAOkE,EAAP,KAAcrD,EAAd,KACA,EAAyBb,mBAAS,MAAlC,mBAAOmE,EAAP,KAAarD,EAAb,KACA,EAA6Bd,oBAAS,GAAtC,mBAAOgF,EAAP,KAAeH,EAAf,KAEAT,qBAAU,WACN,GAA2B,IAAxBrB,aAAakC,OAAc,CAC1B,IAAIC,EAAOjC,KAAKkC,MAAMpC,aAAaqC,QAAQ,aAE3C1E,EADO,oDAAgDwE,GACtC,CAACb,OAAQ,OAAOxD,EAAUC,EAASC,MAE1D,IAOF,OACI,0BAAStB,UAAU,iBAAnB,UACM+B,IAAS4B,EAAc,oBAAI3D,UAAU,YAAd,kCACvB,oBAAIA,UAAU,YAAd,yDACAyE,GAAW,cAAChG,EAAD,IACD,OAAViG,GAAmB,cAAC5E,EAAD,CAAUC,OAAQ2E,IACvC,qBAAK1E,UAAU,mBAAf,SACM+B,IAAS4B,GAAgB5B,EAAKmC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAA8BpC,KAAMoC,GAAbA,EAAGzD,SAExE6E,GAAW,cAAC,EAAD,CAAaH,WAAYA,EAAY9D,QAASA,EAASqC,YAAaA,IAC9E5B,IAAS4B,GAAgB,wBAAQ3D,UAAU,aAAaC,QAf/C,WACfmF,GAAW,GACXlF,OAAO2E,OAAO,EAAE,IAae,iCCvCxB,UAA0B,4C,MCG1B,SAASe,IACpB,OACI,sBAAK5F,UAAU,kBAAf,UACI,qBAAKuC,IAAKsD,EAAQrD,IAAI,WACtB,6HACA,mBAAGsD,KAAK,+BAAR,oCCsBGC,MAtBf,WACE,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACA,cAAC,IAAD,CAAOhB,OAAK,EAACiB,KAAK,IAAIC,UAAW1B,IACjC,cAAC,IAAD,CAAOQ,OAAK,EAACiB,KAAK,aAAaC,UAAWX,IAC1C,cAAC,IAAD,CAAOP,OAAK,EAACiB,KAAK,SAASC,UAAWL,IACtC,cAAC,IAAD,CAAOI,KAAK,IAAZ,SACE,qBAAIhG,UAAU,YAAd,UACA,mBAAGA,UAAU,gCACb,uBAFA,2DCPKkG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDd9D,IAASsE,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnE,SAASC,eAAe,SAM1BwD,M","file":"static/js/main.a89932ad.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Loader(){\r\n    return(\r\n        <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"#61dafb\">\r\n            <g fill=\"none\" fillRule=\"evenodd\">\r\n                <g transform=\"translate(1 1)\" strokeWidth=\"2\">\r\n                    <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\"/>\r\n                    <path d=\"M36 18c0-9.94-8.06-18-18-18\">\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        type=\"rotate\"\r\n                        from=\"0 18 18\"\r\n                        to=\"360 18 18\"\r\n                        dur=\"1s\"\r\n                        repeatCount=\"indefinite\"/>\r\n                    </path>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}","import React from \"react\"\r\nimport \"./Error-msg.css\"\r\n\r\nexport default function ErrorMsg({status}){\r\n    return(\r\n        <div className=\"error-container\">\r\n            <p>{status}</p>\r\n            <button onClick={()=>{window.location.reload()}}>Volver</button>\r\n        </div>\r\n    )\r\n}","import {useState} from \"react\"\r\nimport \"./RickAndMortySearch.css\"\r\n\r\nexport default function RickAndMortySearch({setSearch}){\r\n    const [name, setName] = useState(\"\")\r\n    \r\n    const handleSearch=(e)=>{\r\n        e.preventDefault()\r\n        setSearch(name)\r\n    }\r\n    \r\n    const handleChange=(e)=> setName(e.target.value)\r\n    \r\n    return(\r\n        <form className=\"search-form\">\r\n            <input type=\"search\" className=\"search-input\" id=\"search\" placeholder=\"Buscar\" onChange={handleChange} value={name}/>\r\n            <button type=\"submit\" className=\"submit-btn\" onClick={handleSearch}>\r\n                <i className=\"fas fa-search\"></i>\r\n            </button>\r\n        </form>\r\n    )\r\n}","export default async function fetchRequest(url,options,setLoader,setError,setData){  \r\n    setLoader(true)                           \r\n    try {\r\n        let res = await fetch(url,options)\r\n        let json = await res.json()\r\n        \r\n        if (!res.ok) {\r\n            const err = {\"status\": res.status, \"statusText\": res.statusText}\r\n            throw err\r\n        }\r\n        setData(json) \r\n        \r\n    }catch (err) {\r\n        let message = err.statusText || \"Ha ocurrido un error en la petición\"\r\n        let status = err.status || \"00\"\r\n        setError(`Error ${status}: ${message}`)\r\n    }\r\n    setLoader(false)\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./RickAndMortyModal.css\"\r\n\r\nexport default function RickAndMortyModal({data,setModal}){\r\n    let name = data.data.name\r\n    let img = data.data.image\r\n    let origin = data.data.origin.name\r\n    let species = data.data.species\r\n    let type = data.data.type\r\n    let location = data.data.location.name\r\n    \r\n    const handleClose=()=> setModal(false)\r\n    \r\n    return ReactDOM.createPortal(\r\n        <div className=\"modal-container\">\r\n            <article className=\"modal\">\r\n                <button className=\"close-btn\" onClick={handleClose}>x</button>\r\n                <img src={img} alt={name} className=\"modalImg\"></img>\r\n                <h2 className=\"name\">{name}</h2>\r\n                <p className=\"info\">Origen: {origin}</p>\r\n                <p className=\"info\">Especie: {species}</p>\r\n                <p className=\"info\">Tipo: {type}</p>\r\n                <p className=\"info\">Ubicación: {location}</p>\r\n            </article>\r\n        </div>, \r\n        document.getElementById(\"modal\")\r\n    )\r\n}","import {useState} from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport \"./RickAndMortyCard.css\"\r\nimport RickAndMortyModal from \"./RickAndMortyModal\"\r\n\r\nlet favList = [259]\r\n\r\nexport default function RickAndMortyCard(data){\r\n    const [modal,setModal] = useState(false)\r\n    const [sign,setSign] = useState(false)\r\n    let {pathname} = useLocation()\r\n    \r\n    let img = data.data.image\r\n    let name = data.data.name\r\n    let id = data.data.id\r\n\r\n    const handleClick=()=> setModal(true)\r\n    \r\n    const handleFav=(e)=>{\r\n        setSign(true)\r\n        setTimeout(() => setSign(false),1000);\r\n        let favName = e.target.id\r\n        favList.push(favName)\r\n        localStorage.setItem('userFavs', JSON.stringify(favList))\r\n    }\r\n\r\n    return(\r\n        <div className=\"card\">\r\n            {sign && <h5 className=\"add-sign\">{\"Agregado a Favoritos\"}</h5>}\r\n            {(pathname.includes(\"/favorites\")) || <i className=\"fas fa-heart\" onClick={handleFav} id={id}></i>}\r\n            <img src={img} alt={name} className=\"card-img\"></img>\r\n            <h4 className=\"card-name\">{name}</h4>\r\n            <button onClick={handleClick} className=\"card-btn\">+</button>\r\n            {modal && <RickAndMortyModal data={data} setModal={setModal}/>}\r\n        </div>\r\n    )\r\n}","import { useHistory } from \"react-router-dom\"\r\nimport RickAndMortyCard from \"./RickAndMortyCard\"\r\nimport \"./RickAndMortyResults.css\"\r\n\r\nexport default function RickAndMortyResults({data,initialData,setInfo,page,setPage}){\r\n    let history = useHistory() \r\n    \r\n    const handlePrev=()=>{\r\n        setPage(page - 1)\r\n        history.push(`?page=${page - 1}`) \r\n        setInfo(data.info.prev)\r\n    }\r\n    \r\n    const handleNext=()=>{\r\n        setPage(page + 1)\r\n        history.push(`?page=${page + 1}`)\r\n        setInfo(data.info.next)\r\n    }\r\n    \r\n    return(\r\n        <section>\r\n            <div className=\"result-container\">\r\n                {(data !== initialData) && data.results.map((el)=>(<RickAndMortyCard key={el.id} data={el} />))}\r\n            </div>\r\n            <div className=\"result-buttons-container\">\r\n                {(data.info.prev) && <button onClick={handlePrev}>Anterior</button>}\r\n                {(!data.info.next && page === 1)? <></> : <b>{`Página ${page}`}</b>}\r\n                {(data.info.next) &&<button onClick={handleNext}>Próxima</button>}\r\n            </div>\r\n        </section>\r\n    )\r\n}","import {useState,useEffect} from \"react\"\r\nimport Loader from \"./Loader\"\r\nimport ErrorMsg from \"./Error-msg\"\r\nimport RickAndMortySearch from \"./RickAndMortySearch\"\r\nimport fetchRequest from \"../helpers/fetchRequest\"\r\nimport RickAndMortyResults from \"./RickAndMortyResults\"\r\nimport \"../App.css\"\r\n\r\n\r\nlet initialData = {}\r\n\r\nlet initialSearch = \"\"\r\n\r\n\r\nexport default function RickAndMortyApp(){\r\n    const [data,setData] = useState(initialData)\r\n    const [info,setInfo] = useState(\"\")\r\n    const [page,setPage] = useState(1)\r\n    const [search,setSearch] = useState(initialSearch)\r\n    const [loader,setLoader] = useState(false)\r\n    const [error,setError] = useState(null)\r\n      \r\n    useEffect(()=>{\r\n        let url = \"https://rickandmortyapi.com/api/character\"\r\n        \r\n        fetchRequest(url,{method: \"GET\"},setLoader,setError,setData)\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n        if (search !== initialSearch){\r\n            let url = `https://rickandmortyapi.com/api/character/?name=${search}`\r\n            fetchRequest(url,{method: \"GET\"},setLoader,setError,setData)\r\n            setSearch(initialSearch)\r\n            setPage(1)\r\n        }\r\n    },[search])\r\n    \r\n    useEffect(()=>{\r\n        if (info !== \"\"){\r\n            let url = info\r\n            fetchRequest(url,{method: \"GET\"},setLoader,setError,setData)\r\n            window.scroll(0,0)\r\n        }\r\n    },[info])\r\n    \r\n    return(\r\n        <div className=\"app-container\">\r\n            {(!error) && <RickAndMortySearch setSearch={setSearch}/>}\r\n            {(loader) && <Loader/>}\r\n            {(error !== null) && <ErrorMsg status={error} />}\r\n            {(data !== initialData) && <h4 className=\"app-title\">Listado de Personajes</h4>}\r\n            {(data !== initialData) && <RickAndMortyResults data={data} initialData={initialData} setInfo={setInfo} page={page} setPage={setPage} />}\r\n        </div>\r\n    )\r\n}","import { NavLink } from \"react-router-dom\";\r\nimport \"./RickAndMortyNavMenu.css\"\r\n\r\nexport default function RickAndMortyNavMenu(){\r\n    return(\r\n        <nav className=\"nav-menu\">\r\n            <NavLink exact to=\"/\" className=\"nav-menu-item\" activeClassName=\"active\">Home</NavLink>\r\n            <NavLink exact to=\"/favorites\" className=\"nav-menu-item\" activeClassName=\"active\">Favoritos</NavLink>\r\n            <NavLink exact to=\"/about\" className=\"nav-menu-item\" activeClassName=\"active\">Sobre Mí</NavLink>\r\n        </nav>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/rickandmortylogo.c7b3d4fd.png\";","import logo from \"../assets/rickandmortylogo.png\"\r\nimport \"./RickAndMortyHeader.css\"\r\n\r\nexport default function RickAndMortyHeader(){\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={logo} alt=\"logo\" className=\"header-logo\"></img>\r\n            <h3 className=\"header-title\">Buscador de personajes de Rick And Morty</h3>\r\n        </header>\r\n    )\r\n}","import React from \"react\"\r\nimport \"./ConfirmSign.css\"\r\n\r\nexport default function ConfirmSign({setConfirm,setData,initialData}){\r\n        \r\n    const handleCancel=()=> setConfirm(false)\r\n    \r\n    const handleConfirm=()=> {\r\n        localStorage.clear()\r\n        setData(initialData)\r\n        window.location.reload()\r\n    }\r\n    \r\n    return (\r\n        <div className=\"confirm-sign\">\r\n            <h4>¿Está seguro de que desea eliminar los Favoritos?</h4>\r\n            <button onClick={handleConfirm} className=\"confirm-btn\">Ok</button>\r\n            <button onClick={handleCancel} className=\"cancel-btn\">Cancelar</button>\r\n        </div>\r\n    )\r\n}","import {useEffect,useState} from \"react\"\r\nimport fetchRequest from \"../helpers/fetchRequest\"\r\nimport Loader from \"./Loader\"\r\nimport ErrorMsg from \"./Error-msg\"\r\nimport RickAndMortyCard from \"./RickAndMortyCard\";\r\nimport \"./RickAndMortyResults.css\"\r\nimport ConfirmSign from \"./ConfirmSign\";\r\n\r\nlet initialData = {}\r\n\r\nexport default function RickAndMortyFavs(){\r\n    const [data,setData] = useState(initialData)\r\n    const [loader,setLoader] = useState(false)\r\n    const [error,setError] = useState(null)\r\n    const [confirm,setConfirm] = useState(false)\r\n    \r\n    useEffect(()=>{\r\n        if(localStorage.length !== 0) {\r\n            let favs = JSON.parse(localStorage.getItem('userFavs'))\r\n            let url = `https://rickandmortyapi.com/api/character/${favs}`\r\n            fetchRequest(url,{method: \"GET\"},setLoader,setError,setData)\r\n        }\r\n    },[])\r\n    \r\n    const handleDelete=()=> {\r\n        setConfirm(true)\r\n        window.scroll(0,0)\r\n    }\r\n   \r\n    return(\r\n        <section className=\"favs-container\">\r\n            {(data !== initialData)? <h4 className=\"app-title\">Personajes favoritos</h4>\r\n            : <h4 className=\"app-title\">No tiene personajes favoritos seleccionados</h4>}\r\n            {(loader) && <Loader/>}\r\n            {(error !== null) && <ErrorMsg status={error} />}\r\n            <div className=\"result-container\">\r\n                {(data !== initialData) && data.map((el)=>(<RickAndMortyCard key={el.id} data={el} />))}\r\n            </div>\r\n            {confirm && <ConfirmSign setConfirm={setConfirm} setData={setData} initialData={initialData} />}\r\n            {(data !== initialData) && <button className=\"delete-btn\" onClick={handleDelete}>Borrar Favoritos</button>}\r\n        </section>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/favicon-animado.487fa2ca.ico\";","import myLogo from \"../assets/favicon-animado.ico\"\r\nimport \"./RickAndMortyAbout.css\"\r\n\r\nexport default function RickAndMortyAbout(){\r\n    return(\r\n        <div className=\"about-container\">\r\n            <img src={myLogo} alt=\"myLogo\"/>\r\n            <h3>Página creada por Agustín Rodríguez Minaverry utilizando la The Rick and Morty API</h3>\r\n            <a href=\"https://rickandmortyapi.com/\">rickandmortyapi.com</a>\r\n        </div>\r\n    )\r\n}","import './App.css'\nimport RickAndMortyApp from './components/RickAndMortyApp';\nimport { HashRouter, Route, Switch} from \"react-router-dom\"\nimport RickAndMortyNavMenu from './components/RickAndMortyNavMenu';\nimport RickAndMortyHeader from './components/RickAndMortyHeader';\nimport RickAndMortyFavs from './components/RickAndMortyFavs';\nimport RickAndMortyAbout from './components/RickAndMortyAbout';\n\nfunction App() {\n  return (\n    <>\n      <RickAndMortyHeader />\n      <HashRouter>\n        <RickAndMortyNavMenu/>\n        <Switch>\n        <Route exact path=\"/\" component={RickAndMortyApp}/>\n        <Route exact path=\"/favorites\" component={RickAndMortyFavs}/>\n        <Route exact path=\"/about\" component={RickAndMortyAbout}/>\n        <Route path=\"*\">\n          <h3 className=\"error-404\">\n          <i className=\"fas fa-exclamation-triangle\"></i>\n          <br></br>\n          ERROR 404: La ruta seleccionada no existe</h3>\n        </Route>\n        </Switch>\n      </HashRouter>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}